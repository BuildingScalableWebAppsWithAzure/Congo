@model Congo.Web.ViewModels.WriteReviewVM

@{
    ViewBag.Title = "WriteReview";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (string.IsNullOrEmpty(Model.WriteReviewResult))
    {

        <div class="form-horizontal">
            <h4>Write a Review for @Model.ProductName</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2">Your Name</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Review.ReviewerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Review.ReviewerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Review.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Review.Rating, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Review.Rating, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Review, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Review.Review, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Review, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
            @Html.HiddenFor(p => p.ProductId)

        </div>
    }
    else
    {
        <p class="margin-top">@Model.WriteReviewResult</p>
    }
}

<div>
    @Html.ActionLink("Back to product", "Product", new { id = Model.ProductId })
</div>
